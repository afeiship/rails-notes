(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{205:function(e,a,t){"use strict";t.r(a);var n=t(2),s=Object(n.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"what-is-engine"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-is-engine","aria-hidden":"true"}},[e._v("#")]),e._v(" what is engine")]),e._v(" "),t("blockquote",[t("p",[e._v("本文介绍引擎及其用法，即如何通过引擎这个干净、易用的接口，为宿主应用提供附加功能。")])]),e._v(" "),t("h2",{attrs:{id:"description"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#description","aria-hidden":"true"}},[e._v("#")]),e._v(" description")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("引擎可以看作为宿主应用提供附加功能的微型应用。\n实际上，Rails 应用只不过是“加强版”的引擎\nRails::Application 类从 Rails::Engine 类继承了大量行为。\n一定要记住，在任何时候，应用的优先级都应该比引擎高。\n应用对其环境中发生的事情拥有最终的决定权。\n引擎用于增强应用的功能，而不是彻底改变应用的功能。\n引擎的例子有\n    - Devise（提供身份验证）\n    - Thredded（提供论坛功能）\n    - Spree（提供电子商务平台） \n    - 和 RefineryCMS（CMS 引擎）。\n")])])]),t("h2",{attrs:{id:"engine-vs-plugin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#engine-vs-plugin","aria-hidden":"true"}},[e._v("#")]),e._v(" engine vs plugin")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("引擎还和插件密切相关。\n两者具有相同的 lib 目录结构，并且都使用 rails plugin new 生成器来生成。\n区别在于，引擎被 Rails 视为“完整的插件”（通过传递给生成器的 --full 选项可以看出这一点）。\n在这里我们实际使用的是 --mountable 选项，这个选项包含了 --full 选项的所有特性。\n本文把这类“完整的插件”简称为“引擎”。\n也就是说，引擎可以是插件，插件也可以是引擎。\n")])])]),t("h2",{attrs:{id:"resources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#resources","aria-hidden":"true"}},[e._v("#")]),e._v(" resources")]),e._v(" "),t("ul",[t("li",[e._v("https://www.weiyun.com/disk/folder/4efd47053fefac82ede838ec6bd9d728[277-mountable-engines.mp4]")])])])},[],!1,null,null,null);a.default=s.exports}}]);